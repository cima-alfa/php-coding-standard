#!/bin/bash

usage=$(cat << EOT

Usage:

up|start    [-d] [--build]           Start / Build container.
down        [-v]                     Remove container.
stop                                 Stop container.
restart                              Restart container.
sh          [--user root] [options]  Access container shell.
composer|c  [args]                   Use composer.

EOT
)

getUsage()
{
    if [ "$NO_COLOR" != "" ] && [ "$FORCE_COLOR" == "" ]; then
        echo "$usage"

        return
    fi

    colored="$usage"

    colored=$(echo "$colored" | sed -E -e s/Usage:/`printf "\e[1;33m"`Usage:`printf "\e[0m"`/g)
    colored=$(echo "$colored" | sed -E -e s/\([^' ']+\)' '\(' '*\\[.+\\]\)?' '\(.+\)/`printf "\e[1;32m"`'\1'`printf "\e[0m"`' '`printf "\e[1;90m"`'\2'`printf "\e[0m"`' \3'/g)

    echo "$colored"
}

if [ $# -eq 0 ]; then
    getUsage

    printf "\n"

    exit 0
fi

container_commands=(sh composer c)
container="__undefined__"

for command in "${container_commands[@]}"; do
    if [ "$command" == "$1" ]; then
        container=$(docker compose --env-file="$(dirname "$0")/../.docker/.env" ps --format '{{.Name}}' application)

        if [ "$container" == "" ]; then
            exit 1
        fi

        break
    fi
done

if [ "$1" == "sh" ]; then
    if [[ "${*:2}" == *"--user"* ]]; then
        docker exec -it "${@:2}" "$container" sh

        exit 0
    fi

    docker exec -it "${@:2}" --user application "$container" sh

    exit 0
fi

if [ "$1" == "c" ] || [ "$1" == "composer" ]; then
    docker exec -it --user application -e XDEBUG_MODE=off  "$container" composer "${@:2}"

    exit 0
fi

command="$1"

if [ "$1" == "start" ]; then
    command="up"
fi

docker compose --env-file="$(dirname "$0")/../.docker/.env" "$command" "${@:2}"
