#!/bin/bash

usage()
{
    printf "\nUsage:\n\n"

    printf "app up [-d] [--build]           Start / Build container(s).\n"
    printf "app down [-v]                   Remove container(s).\n"
    printf "app stop                        Stop container(s).\n"
    printf "app restart                     Restart container(s).\n"
    printf "app sh [--user root] [options]  Access container shell.\n"
    printf "app composer|c [args]           Use composer.\n"

    printf "\n"
}

if [ $# -eq 0 ]; then
    usage

    exit 0
fi

container_commands=(sh composer c)
container="__undefined__"

for command in "${container_commands[@]}"; do
    if [ "$command" == "$1" ]; then
        container=$(docker compose --env-file="$(dirname "$0")/../.docker/.env" ps --format '{{.Name}}' application)

        if [ "$container" == "" ]; then
            exit 1
        fi

        break
    fi
done

if [ "$1" == "sh" ]; then
    if [[ "${*:2}" == *"--user"* ]]; then
        docker exec -it "${@:2}" "$container" sh

        exit 0
    fi

    docker exec -it "${@:2}" --user application "$container" sh

    exit 0
fi

if [ "$1" == "c" ] || [ "$1" == "composer" ]; then
    docker exec -it --user application -e XDEBUG_MODE=off  "$container" composer "${@:2}"

    exit 0
fi

docker compose --env-file="$(dirname "$0")/../.docker/.env" "$1" "${@:2}"
